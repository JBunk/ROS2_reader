#ifndef FIB_ACTION_SERVER_HPP
#define FIB_ACTION_SERVER_HPP

#include "rclcpp/rclcpp.hpp"                // Needed for nodes
#include "rclcpp_action/rclcpp_action.hpp"  // needed for actions

// the location of our custom action.
// the hpp generated by ROS as a underscore (_) before every capital, expect the first:
// for example: /my/path/MyAction.action become /my/path/my_action.action
#include "custom_interfaces/action/fibonacci.hpp"

class FibActionServer : public rclcpp::Node {
public:
    // 'using' allows us to use a shorter word for these long types:
    using FibAction = custom_interfaces::action::Fibonacci;
    
    using GoalHandleFib = rclcpp_action::ServerGoalHandle<FibAction>;

    FibActionServer();
  
private:
    rclcpp_action::GoalResponse handle_goal(
        const rclcpp_action::GoalUUID & uuid, 
        std::shared_ptr<const FibAction::Goal> goal
    );

    rclcpp_action::CancelResponse handle_cancel(
        const std::shared_ptr<GoalHandleFib> goal_handle
    );

    void handle_accepted(const std::shared_ptr<GoalHandleFib> goal_handle);

    void execute(const std::shared_ptr<GoalHandleFib> goal_handle);

    rclcpp_action::Server<FibAction>::SharedPtr action_server_;
};

#endif /* FIB_ACTION_SERVER_HPP */